name: Deploy ios App to appstore

on:
  push:
    tags:
      - '[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  build:
    runs-on: macos-latest
    env:
      SERVICE_ANDROID : ${{ secrets.GOOGLE_SERVICE }}
      SERVICE_IOS : ${{ secrets.GOOGLE_SERVICE_IOS }}
      ENV_KEYSTORE_WITHOUT_PATH : ${{ secrets.ENV_KEYSTORE_WITHOUT_PATH }}
      SERVICE_ACCOUNT : ${{ secrets.SERVICE_ACCOUNT }}
      KEYSTORE_BASE64 : ${{ secrets.KEYSTORE_BASE64 }}
      KEY_GEMINI : ${{ secrets.KEY_GEMINI }}
      PROMPT_ANALYZE : ${{ secrets.PROMPT_ANALYZE }}
      PROMPT_PERSONA : ${{ secrets.PROMPT_PERSONA }}
      APPLE_AUTH_KEY : ${{ secrets.APPLE_AUTH_KEY }}
      APPLE_KEY_ID : ${{ secrets.APPLE_KEY_ID }}
      APPLE_USER_ID : ${{ secrets.APPLE_USER_ID }}
      KEYCHAIN_NAME: ${{ secrets.KEYCHAIN_NAME }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      GIT_BASIC_AUTH_64: ${{ secrets.GIT_BASIC_AUTH_64 }}
      HOOK_URL: ${{ secrets.HOOK_URL }}

    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Restore cached gradle
        id: cache-gradle-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-caches

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate Local Properties
        run: |
          echo "GEMINI_KEY = ${KEY_GEMINI}" >> local.properties
          echo "PROMPT_ANALYZE = ${PROMPT_ANALYZE}" >> local.properties
          echo "MAKE_PERSONA = ${PROMPT_PERSONA}" >> local.properties

      - name: Insert Google Service Plist in iOS
        working-directory: iosApp/iosApp
        run: echo "${SERVICE_IOS}" >> GoogleService-Info.plist

      - name: Insert Apple Key File
        run: echo "${APPLE_AUTH_KEY}" > brocallie_auth.p8

      - name: Generate .env in fastlane
        run: |
          echo "KEYCHAIN_NAME = \"${KEYCHAIN_NAME}\"" >> fastlane/.env
          echo "KEYCHAIN_PASSWORD = \"${KEYCHAIN_PASSWORD}\"" >> fastlane/.env
          echo "GIT_BASIC_AUTH_64 = \"${GIT_BASIC_AUTH_64}\"" >> fastlane/.env
          echo "KEY_FILE_PATH = \"$(pwd)/brocallie_auth.p8\"" >> fastlane/.env
          echo "KEY_ID = \"${APPLE_KEY_ID}\"" >> fastlane/.env
          echo "ISSUER_ID = \"${APPLE_USER_ID}\"" >> fastlane/.env
          echo "HOOK_URL = \"${HOOK_URL}\"" >> fastlane/.env

      - name: Run iOS lane
        run: |
          fastlane ios deploy_ios
        env:
          MATCH_PASSWORD : ${{ secrets.MATCH_PASSWORD }}

      - name: Cache gradle caches
        id: cache-gradle-save
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ steps.cache-gradle-restore.outputs.cache-primary-key }}


