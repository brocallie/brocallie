name: Deploy apps to appstore

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SERVICE_ANDROID : ${{ secrets.GOOGLE_SERVICE }}
      SERVICE_IOS : ${{ secrets.GOOGLE_SERVICE_IOS }}
      ENV_KEYSTORE_WITHOUT_PATH : ${{ secrets.ENV_KEYSTORE_WITHOUT_PATH }}
      SERVICE_ACCOUNT : ${{ secrets.SERVICE_ACCOUNT }}
      KEYSTORE_BASE64 : ${{ secrets.KEYSTORE_BASE64 }}
      KEY_GEMINI : ${{ secrets.KEY_GEMINI }}
      PROMPT_ANALYZE : ${{ secrets.PROMPT_ANALYZE }}
      PROMPT_PERSONA : ${{ secrets.PROMPT_PERSONA }}
      APPLE_AUTH_KEY : ${{ secrets.APPLE_AUTH_KEY }}
      APPLE_KEY_ID : ${{ secrets.APPLE_KEY_ID }}
      APPLE_USER_ID : ${{ secrets.APPLE_USER_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Restore cached gradle
        id: cache-gradle-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-caches

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate Local Properties
        run: |
          echo "GEMINI_KEY = ${KEY_GEMINI}" >> local.properties
          echo "PROMPT_ANALYZE = ${PROMPT_ANALYZE}" >> local.properties
          echo "MAKE_PERSONA = ${PROMPT_PERSONA}" >> local.properties

      - name: Insert Google Service Json in Android
        working-directory: androidApp
        run: echo "${SERVICE_ANDROID}" >> google-services.json

      - name: Insert Service Account in Android
        working-directory: androidApp
        run: echo "${SERVICE_ACCOUNT}" >> service_account.json

      - name: Insert Google Service Plist in iOS
        working-directory: iosApp/iosApp
        run: echo "${SERVICE_IOS}" >> GoogleService-Info.plist

      - name: Insert Keystore
        run: echo "${KEYSTORE_BASE64}" | base64 -d > brocallie.keystore

      - name: Generate .env in fastlane
        run: |
          echo "KEYSTORE_PATH = \"$(pwd)/brocallie.keystore\"" >> fastlane/.env
          echo "${ENV_KEYSTORE_WITHOUT_PATH}" >> fastlane/.env

      - name: Run Android lane
        run: |
          fastlane ios deploy_ios

      - name: Cache gradle caches
        id: cache-gradle-save
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ steps.cache-gradle-restore.outputs.cache-primary-key }}


